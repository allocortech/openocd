#==========================================================
# script for pac52xx family
#==========================================================
# pac52xx devices support only SWD transports

#==========================================================
#===== Print information about debug adapter selected =====
#==========================================================
# Output Debug Adapter referenced by OpenOCD script
puts -nonewline [adapter_name]
puts  " Is the selected Debug Adapter (interface)."

#===== ST-Link =====
if { [adapter_name] == "hla" } {
    puts  "ST-LINK most likely adapater; hla adapter primarily used for ST-LINK"

#===== CMSIS-DAP =====
} elseif {[adapter_name] == "cmsis-dap" } {
    puts "CMSIS-DAP: If using SWDAP or DIPDAP boards, change SWDIO and SWCLK series resistors from 470R to 33R"
    
#===== J-Link =====
} elseif {[adapter_name] == "jlink" } {    
    puts "Standard Segger J-link USB drivers are not supported."
    puts "See https://wiki.segger.com/OpenOCD for more information."
    puts "A better option is to use the J-Link GDB Server instead of OpenOCD."

#===== OTHER =====    
} else {
    puts "Adapter has not been tested and may not be supported"
}


source [find target/swj-dp.tcl]
source [find mem_helper.tcl]

if { [info exists CHIPNAME] } {
   set _CHIPNAME $CHIPNAME
} else {
   set _CHIPNAME pac52xx
}

set _ENDIAN little

# Work-area is a space in RAM used for flash programming
# By default use 8kB (Available RAM in pac52xx devices)
if { [info exists WORKAREASIZE] } {
   set _WORKAREASIZE $WORKAREASIZE
} else {
   set _WORKAREASIZE 0x2000
}

# pac52xx CPU Tap ID
set _CPUTAPID 0x0bb11477

swj_newdap $_CHIPNAME cpu -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu

set _TARGETNAME $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -endian $_ENDIAN -dap $_CHIPNAME.dap

$_TARGETNAME configure -work-area-phys 0x20000000 -work-area-size $_WORKAREASIZE -work-area-backup 0

set _FLASHNAME $_CHIPNAME.flash
flash bank $_FLASHNAME pac52xx 0 0 0 0 $_TARGETNAME

if { [info exists ADAPTER_KHZ] } {
   adapter_khz $ADAPTER_KHZ
} else {
    adapter_khz 1000
}

# If not using High Level Adapater, then use cortex_m specific OpenOCD functions
if {![using_hla]} {
    # use cortex_m specific OpenOCD functions with SW reset (ST-LINK doesn't support cortex_m)
    cortex_m reset_config sysresetreq
}    

# Below needed for DAPLINK implementation of CMSIS-DAP protocol;  Resolves issue with not halting after reset
if {[adapter_name] == "cmsis-dap" } {
   
    # Additional reset event needed because DAP-LINK SW didn't properly set bits in Arm M0 to halt after reset
    $_TARGETNAME configure -event reset-deassert-post {
        #set DEMCR->VC_CORERESET bit ; Reset Vector Catch. Halt running system if Core reset occurs
        mmw 0xE000EDFC 0x00000001 0 

        #set DHCSR->C_DEBUGEN bit to enable debug
        mmw 0xE000EDF0 0xA05F0001 0xFFFF0000    
        
        #reset via AIRCR->SYSRESETREQ bit
        mmw 0xE000ED0C 0x05FA0004 0xFFFF0000
    }
}
